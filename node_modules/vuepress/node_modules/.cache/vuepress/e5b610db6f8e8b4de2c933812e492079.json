{"remainingRequest":"/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms/node_modules/vuepress/lib/app/dataMixin.js","dependencies":[{"path":"/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms/node_modules/vuepress/lib/app/dataMixin.js","mtime":1524500204000},{"path":"/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js","mtime":1530808242000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _freeze = require('babel-runtime/core-js/object/freeze');\n\nvar _freeze2 = _interopRequireDefault(_freeze);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _vue = require('vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _siteData = require('./.temp/siteData');\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prepare(siteData) {\n  siteData.pages.forEach(function (page) {\n    if (!page.frontmatter) {\n      page.frontmatter = {};\n    }\n  });\n  if (siteData.locales) {\n    (0, _keys2.default)(siteData.locales).forEach(function (path) {\n      siteData.locales[path].path = path;\n    });\n  }\n  (0, _freeze2.default)(siteData);\n}\n\nprepare(_siteData.siteData);\nvar store = new _vue2.default({\n  data: { siteData: _siteData.siteData }\n});\n\nif (module.hot) {\n  module.hot.accept('./.temp/siteData', function () {\n    prepare(_siteData.siteData);\n    store.siteData = _siteData.siteData;\n  });\n}\n\nexports.default = {\n  computed: {\n    $site: function $site() {\n      return store.siteData;\n    },\n    $localeConfig: function $localeConfig() {\n      var _$site$locales = this.$site.locales,\n          locales = _$site$locales === undefined ? {} : _$site$locales;\n\n      var targetLang = void 0;\n      var defaultLang = void 0;\n      for (var path in locales) {\n        if (path === '/') {\n          defaultLang = locales[path];\n        } else if (this.$page.path.indexOf(path) === 0) {\n          targetLang = locales[path];\n        }\n      }\n      return targetLang || defaultLang || {};\n    },\n    $siteTitle: function $siteTitle() {\n      return this.$localeConfig.title || this.$site.title || '';\n    },\n    $title: function $title() {\n      var page = this.$page;\n      var siteTitle = this.$siteTitle;\n      var selfTitle = page.frontmatter.home ? null : page.frontmatter.title || // explicit title\n      page.title // inferred title\n      ;\n      return siteTitle ? selfTitle ? siteTitle + ' | ' + selfTitle : siteTitle : selfTitle || 'VuePress';\n    },\n    $description: function $description() {\n      return this.$page.frontmatter.description || this.$localeConfig.description || this.$site.description || '';\n    },\n    $lang: function $lang() {\n      return this.$page.frontmatter.lang || this.$localeConfig.lang || 'en-US';\n    },\n    $localePath: function $localePath() {\n      return this.$localeConfig.path || '/';\n    },\n    $themeLocaleConfig: function $themeLocaleConfig() {\n      return (this.$site.themeConfig.locales || {})[this.$localePath] || {};\n    },\n    $page: function $page() {\n      return (0, _util.findPageForPath)(this.$site.pages, this.$route.path);\n    }\n  }\n};",{"version":3,"sources":["node_modules/vuepress/lib/app/dataMixin.js"],"names":["prepare","siteData","pages","forEach","page","frontmatter","locales","path","store","Vue","data","module","hot","accept","computed","$site","$localeConfig","targetLang","defaultLang","$page","indexOf","$siteTitle","title","$title","siteTitle","selfTitle","home","$description","description","$lang","lang","$localePath","$themeLocaleConfig","themeConfig","$route"],"mappings":"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","file":"dataMixin.js","sourceRoot":"/Users/luisguilherme/Documents/Desenvolvimento/vuepress-netlify-cms","sourcesContent":["import Vue from 'vue'\nimport { siteData } from './.temp/siteData'\nimport { findPageForPath } from './util'\n\nfunction prepare (siteData) {\n  siteData.pages.forEach(page => {\n    if (!page.frontmatter) {\n      page.frontmatter = {}\n    }\n  })\n  if (siteData.locales) {\n    Object.keys(siteData.locales).forEach(path => {\n      siteData.locales[path].path = path\n    })\n  }\n  Object.freeze(siteData)\n}\n\nprepare(siteData)\nconst store = new Vue({\n  data: { siteData }\n})\n\nif (module.hot) {\n  module.hot.accept('./.temp/siteData', () => {\n    prepare(siteData)\n    store.siteData = siteData\n  })\n}\n\nexport default {\n  computed: {\n    $site () {\n      return store.siteData\n    },\n    $localeConfig () {\n      const { locales = {}} = this.$site\n      let targetLang\n      let defaultLang\n      for (const path in locales) {\n        if (path === '/') {\n          defaultLang = locales[path]\n        } else if (this.$page.path.indexOf(path) === 0) {\n          targetLang = locales[path]\n        }\n      }\n      return targetLang || defaultLang || {}\n    },\n    $siteTitle () {\n      return this.$localeConfig.title || this.$site.title || ''\n    },\n    $title () {\n      const page = this.$page\n      const siteTitle = this.$siteTitle\n      const selfTitle = page.frontmatter.home ? null : (\n        page.frontmatter.title || // explicit title\n        page.title // inferred title\n      )\n      return siteTitle\n        ? selfTitle\n          ? (siteTitle + ' | ' + selfTitle)\n          : siteTitle\n        : selfTitle || 'VuePress'\n    },\n    $description () {\n      return this.$page.frontmatter.description || this.$localeConfig.description || this.$site.description || ''\n    },\n    $lang () {\n      return this.$page.frontmatter.lang || this.$localeConfig.lang || 'en-US'\n    },\n    $localePath () {\n      return this.$localeConfig.path || '/'\n    },\n    $themeLocaleConfig () {\n      return (this.$site.themeConfig.locales || {})[this.$localePath] || {}\n    },\n    $page () {\n      return findPageForPath(\n        this.$site.pages,\n        this.$route.path\n      )\n    }\n  }\n}\n"]}]}